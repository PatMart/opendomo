#!/bin/sh
#desc: Save changes permanently

IMAGESDIR="/boot/images"
ROOTIMAGE="$IMAGESDIR/rootfs.img"
MOUNTDIR="/mnt/rootfs-rw"
TMPFSDIR="/mnt/tmpfs"
SYNCOPTS="--quiet --archive --exclude-from=/etc/mkrootfs.excludes"
TEMPFILE="/var/opendomo/tmp/mkrootfs.tmp"
SYSSTATUS="/var/www/data/status.json"

# Checking state and image mount
if grep -c1 aufs=no "/proc/cmdline" &>/dev/null; then
    echo "#ERRO System is in read-write mode"
    echo

# Checking system busy
while [ `cat $SYSSTATUS | cut -f2 -d: | cut -f1 -d}` = "busy" ]; do
    sleep 1
done

# Check roofs image
elif ! test -d $IMAGESDIR; then
    echo "#ERRO System device is not mounted, the configuration can't be saved"
    echo
    exit 1

else
    # Creating sysstate file
    echo "{\"status\":\"busy\"}" > $SYSSTATUS

    # Check filesystems before mount
    mount | grep $MOUNTDIR  &>/dev/null && umount -f $MOUNTDIR
    fsck.ext2 -y $ROOTIMAGE &>/dev/null

    # Mount changes image in rw and check tmpfs
    mkdir -p $MOUNTDIR
    test -d $TMPFSDIR || exit 1
    mount $ROOTIMAGE $MOUNTDIR || exit 1

    # Copy new files in image
    rsync $SYNCOPTS $TMPFSDIR/ $MOUNTDIR/

    # Delete missing files in image
    find $TMPFSDIR -name ".wh.*" -not -name ".wh..*" | sed -e 's/tmpfs/rootfs-rw/' -e 's/.wh.//' > $TEMPFILE
    for file in `cat $TEMPFILE`; do
        rm -r "$file" 2>/dev/null
    done
    rm $TEMPFILE

    # Unmount and check image
    while ! umount $MOUNTDIR; do
        sleep 1
    done
    rmdir $MOUNTDIR 2>/dev/null
    fsck.ext2 -y $ROOTIMAGE &>/dev/null

    # Active sysstate
    echo "{\"status\":\"active\"}" > $SYSSTATUS
fi
