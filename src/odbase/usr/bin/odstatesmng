#!/bin/sh
#desc: Opendomo system states manager

# Variables
DAEMONSDIR="/usr/local/opendomo/daemons"
CONFIGSDIR="/etc/opendomo/states"
INITDIR="/etc/init.d"
STATEPID="/var/opendomo/run/states.pid"
BLACKLIST="motd bootlogs plymouth"

# Checks
if test -z $1; then
    echo "#ERROR You need select a option [ state | service | check ]"
    exit 1
fi

daemons_blacklist() {
    cd $DAEMONSDIR
    for script in *; do
        for blackdaemon in $BLACKLIST; do
            # If script is in blacklist, can be used by plugins, so clean.
            if [ $blackdaemon = $script ] && [ `head -c9` != "#!/bin/sh" ]; then
                echo "#ERROR $script is service in blacklist, can be used by plugins, cleaning ..."
                rm $script &>/dev/null
            # This is a boot service in "S" level, can be used either, so clean
            elif test -f $script && test -x $INITDIR/$script && [ `grep "# Default-Start:" $INITDIR/$script | awk '{print $3}'` = "S" ]; then
                echo "#ERROR $script is a boot service, can be used by plugins, cleaning ..."
                rm $script &>/dev/null
            else
                # This is a survivor, remove sysvinit control to the service
                insserv -r $script 2>/dev/null
            fi
        done
    done
}

change_services() {
    cd $DAEMONSDIR
    for daemon in *; do
        # Start/Stop service in state
        if ! test -f $INITDIR/$daemon && test -f $STATEDIR/$daemon; then
            # This is a opendomo service, started with admin user
            sudo -u admin $DAEMONSDIR/$daemon start 2>/dev/null
        elif test -f $INITDIR/$daemon && test -f $STATEDIR/$daemon; then
            # This is a system service controled by plugins
            service $daemon start 2>/dev/null
        elif ! test -f $STATEDIR/$daemon && test -f $INITDIR/$daemon; then
            # This is a system service stopped in this state
            service $daemon stop  2>/dev/null
        else
            # This is a opendomo service stopped in this state
            sudo -u admin $DAEMONSDIR/$daemon stop 2>/dev/null
        fi
    done
}

case $1 in
    check )
        daemons_blacklist
    ;;
    state )
        # Check state
        if test -z $2 || ! test -d $CONFIGSDIR/$2; then
            echo "#ERROR State don't exist"
            exit 1
        else
            # Save new state in PID file
            STATEDIR=$CONFIGSDIR/$2
            echo "$2" > $STATEPID
            chown admin $STATEPID

            # Check blacklist and change services
            daemons_blacklist
            change_services
        fi
   ;;
    service )
        if   [ `head -c9` != "#!/bin/sh" ]; then
	    # This a system service, check blacklist and change state
	    daemons_blacklist
            [ "$3" = "start" ] && service $2 start 2>/dev/null
            [ "$3" = "stop"  ] && service $2 stop  2>/dev/null
        elif [ `head -c9` == "#!/bin/sh" ]; then
            # This a opendomo service, start with admin user
	    [ "$3" = "start" ] && sudo -u admin $DAEMONSDIR/$2 start
            [ "$3" = "stop"  ] && sudo -u admin $DAEMONSDIR/$2 stop
        else
            echo "#ERROR $2 is not a service"
        fi
    ;;
esac
