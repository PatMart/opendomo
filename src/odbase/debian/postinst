#! /bin/sh

echo "Configuring opendomo services ..."
insserv odchstates.sh  2>/dev/null
insserv opendomo-apt 2>/dev/null
insserv ntpdate 2>/dev/null

# Creating opendomo admin user and group
if ! id -u admin &>/dev/null; then
      echo "Creating opendomo 'admin' user ..."
      useradd -m -s /bin/bash -c 'System administrator <admin@opendomoos.org>' \
          -G users,disk,audio,video,plugdev admin >/dev/null 2>/dev/null
      echo -e 'opendomo\nopendomo' | (passwd admin) 2>/dev/null
fi

# Modify opendomo permissions
chown -R admin:admin /etc/opendomo
chown -R admin:admin /usr/local/opendomo
chown -R admin:admin /var/opendomo
chown -R admin:admin /var/www
chmod 0555           /etc/sudoers.d
chmod 0440           /etc/sudoers.d/*
chown root           /var/www/cgi-bin/od.cgi
chmod +s             /var/www/cgi-bin/od.cgi
chmod 0744           /etc/initramfs-tools/scripts/init-bottom/rootmount
chmod 0744           /etc/initramfs-tools/hooks/create_fstab

# Create links and wrapper scripts
echo "Creating opendomo configuration ..."
ln -fs /usr/local/opendomo/services/syscript/logEvent.sh /usr/bin/logevent
su -c /usr/bin/createwrappers.sh admin &>/dev/null
odconfmng &>/dev/null

# Creating default states
mkdir -p /etc/opendomo/states/sleeping /etc/opendomo/states/secured \
   /etc/opendomo/states/active /etc/opendomo/states/idle
touch /etc/opendomo/states/sleeping/opendomo-apt /etc/opendomo/states/secured/opendomo-apt \
   /etc/opendomo/states/active/opendomo-apt /etc/opendomo/states/active/ssh
chown -R admin:admin /etc/opendomo/states

# Creating default eventhandler
ln -s /usr/local/opendomo/eventhandlers/writeToLog.sh /usr/local/opendomo/defaults/eventhandlers/all-all

# Add modules and create new initramfs image
[ `grep -c1 nls_cp437 /etc/initramfs-tools/modules` -eq 1 ] || echo "nls_cp437" >> /etc/initramfs-tools/modules
[ `grep -c1 nls_utf8  /etc/initramfs-tools/modules` -eq 1 ] || echo "nls_utf8"  >> /etc/initramfs-tools/modules
[ `grep -c1 vfat      /etc/initramfs-tools/modules` -eq 1 ] || echo "vfat"      >> /etc/initramfs-tools/modules
[ `grep -c1 aufs      /etc/initramfs-tools/modules` -eq 1 ] || echo "aufs"      >> /etc/initramfs-tools/modules
/usr/sbin/update-initramfs -u
