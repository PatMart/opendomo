#!/bin/sh
#desc: Make opendomo squash filesystems

# Variables
IMAGESDIR="/mnt/system/images"
IMAGE="$IMAGESDIR/ctchange.img"
MOUNTDIR="/run/mounts/changerw"
CHANGEDIR="/run/mounts/change"
TEMPFSDIR="/run/mounts/tmpfs"
SYNCOPTS="--quiet --archive --exclude-from=/etc/mkrootfs.excludes"

FINDCMD=`find $TEMPFSDIR -name ".wh.*" -not -name ".wh..*" | sed 's/tmpfs/changerw/'`

# Checks
if ! test -d $IMAGESDIR; then
	echo "#ERR: System device is not mounted"
	exit 1
fi

# Select option or image
case $1 in
  custom )
	# Copy an compress default image, only use in restore mode
	if ! test -f $IMAGE && cp $IMAGESDIR/dfchange.img $IMAGE; then
			gzip $IMAGESDIR/dfchange.img
	fi
  ;;
  restore )
	# Uncompress default and delete custom image
	if test -f "$IMAGE" && gunzip $IMAGESDIR/dfchange.img.gz; then
		rm "$IMAGE"
		exit 0
	else
		echo "#ERR Default image can be uncompress"
		exit 1
	fi
  ;;
  * )
	# Help
	echo "USAGE: mkrootfs [ custom | restore ]"
	exit 1
  ;;
esac

# Mounting image
mkdir -p $MOUNTDIR
mount $IMAGE $MOUNTDIR || exit 1

# Copy new files in image
echo -n "#INF: Creating rootfs, please wait "
if
	rsync $SYNCOPTS $TEMPFSDIR/ $MOUNTDIR/
then
	echo "   (done)"
else
	echo "   (ERROR)"
        # Unmount image
        while ! umount $MOUNTDIR; do
		sleep 1
        done
	rmdir $MOUNTDIR 2>/dev/null
	exit 1
fi

# Delete missing files in image
for file in $FINDCMD; do
	FILENAME=`basename $file | sed 's/.sh.//'`
	DIRNAME=`dirname $file`
	if test -f $DIRNAME/$FILENAME; then
		echo "#INF Delete $FILENAME"
		rm -r $DIRNAME/$FILENAME
	fi
done

# Unmount image
while ! umount $MOUNTDIR; do
	sleep 1
done
rmdir $MOUNTDIR 2>/dev/null
