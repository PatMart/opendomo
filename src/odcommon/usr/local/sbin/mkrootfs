#!/bin/sh
#desc: Make opendomo squash filesystems

# USAGE:
#   mkrootfs              Save config
#   mkrootfs    reboot    Save config anr reboot system
#   mkrootfs    restore   Restore default config

# Variables
IMAGESDIR="/mnt/system/images"
DEFIMAGE="$IMAGESDIR/dfchange.img"
CSTIMAGE="$IMAGESDIR/ctchange.img"
MOUNTDIR="/run/mounts/changerw"
CHANGEDIR="/run/mounts/change"
TEMPFSDIR="/run/mounts/tmpfs"

SYNCOPTS="--quiet --archive --exclude-from=/etc/mkrootfs.excludes"
FINDCMD=`find $TEMPFSDIR -name ".wh.*" -not -name ".wh..*" | sed 's/tmpfs/changerw/'`
SYSMODE="/var/opendomo/run/systembusy"

if ! test -d $IMAGESDIR; then
    echo "#ERRO System device is not mounted, the configuration can't be saved"
    echo
    exit 1

elif test -f $SYSMODE; then
    echo "#ERRO System is busy, wait a moment and try again"
    exit 2

elif [ "$1" = "restore" ]; then
    # Delete changes image and restore default config
    echo "#LOADING Restoring default system ..."
    echo
    touch $SYSMODE

    rm -f $CSTIMAGE 2>/dev/null
    gunzip $DEFIMAGE.gz
    cp $DEFIMAGE $CSTIMAGE
    rm $SYSMODE

else
    # Save changes in custom image, first mount custom image in rw
    touch $SYSMODE
    mkdir -p $MOUNTDIR
    mount $CSTIMAGE $MOUNTDIR || exit 1

    # Copy new files in image
    echo "#LOADING Save system configuration (please wait) ..."
    echo
    rsync $SYNCOPTS $TEMPFSDIR/ $MOUNTDIR/

    # Delete missing files in image
    for file in $FINDCMD; do
        FILENAME=`basename $file | sed 's/.sh.//'`
        DIRNAME=`dirname $file`
        if test -f $DIRNAME/$FILENAME; then
            echo "#INF Delete $FILENAME"
            rm -r $DIRNAME/$FILENAME
        fi
    done

    # Unmount image
    while ! umount $MOUNTDIR; do
        sleep 1
    done

    rmdir $MOUNTDIR 2>/dev/null
    rm $SYSMODE
fi

# Check reboot system warrant
if [ "$1" == "reboot" ]; then
    echo "#WARN Reboting now ..."
    echo
    shutdown -r now
fi
