#!/bin/sh
#desc: Configure local drives

# General vars
DEVICE="$1"
ID_FS_LABEL=`blkid -o udev -s LABEL /dev/$DEVICE | cut -f2 -d= | uniq`
MOUNT=`mount | grep -c $DEVICE`

# Dirs vars
MOUNTSDIR=/run/mounts
DISKMOUNT=$MOUNTSDIR/$1
CHANGEDIR=$MOUNTSDIR/change
TEMPFSDIR=$MOUNTSDIR/tmpfs
SWITCHDIR=$MOUNTSDIR/root
INITRDDIR=$MOUNTSDIR/initrd
IMAGESDIR=$DISKMOUNT/images
MNTINITRD=$SWITCHDIR/run/mounts/initrd

# Config vars
ODCFG="$DISKMOUNT/opendomo.cfg"
if test -f $ODCFG; then
	CONFDEVICE=`grep ^CONFDEVICE= $ODCFG | sed 's/\"//g' | cut -f2 -d= `
	SYSDEVICE=`grep ^SYSDEVICE= $ODCFG | sed 's/\"//g' | cut -f2 -d= `
	HOMEDEVICE=`grep ^HOMEDEVICE= $ODCFG | sed 's/\"//g' | cut -f2 -d=`
	LABEL=`grep ^LABEL= $ODCFG | sed 's/\"//g' | cut -f2 -d=`
	LOGDIR=`grep ^LOGDIR= $ODCFG | sed 's/\"//g' | cut -f2 -d=`
fi
DFCHANGES=$IMAGESDIR/dfchange.img
CTCHANGES=$IMAGESDIR/ctchange.img
HOMEIMG=$IMAGESDIR/homefs.img
HOMESIZE=10000

# Configuration label don't exist, change to fs label or device
if test -z $LABEL; then
	if test -z $ID_FS_LABEL; then
		LABEL=$DEVICE
	else
		LABEL=$ID_FS_LABEL
	fi
fi

# Previous checks
if [ "$MOUNT" = "0" ]; then
	rm $DISKMOUNT
	logger "  Drive $DRIVE can't be mounted"
	exit 1
fi
if test -e "/media/$LABEL"; then
	logger "  Drive $DRIVE is already processed"
	exit 1
fi

# Selecting image to mount
if test -f $DFCHANGES; then
	CHANGEIMG=$DFCHANGES
elif test -f $CTCHANGES; then
	CHANGEIMG=$CTCHANGES
fi

# Configure drives
if [ "$SYSDEVICE" = "1" ]; then
	# Creating folders for new rootfs
	mkdir -p $CHANGEDIR $TEMPFSDIR $SWITCHDIR $INITRDDIR

	# Mounting new root parts
	if ! test -z $CHANGEIMG; then
		mount -o ro $CHANGEIMG $CHANGEDIR
	fi
	mount -t tmpfs none $TEMPFSDIR
	mount --bind / $INITRDDIR

	# Creating new compound root
	if
		mount -t aufs -o dirs=$TEMPFSDIR:$CHANGEDIR:$INITRDDIR=ro aufs $SWITCHDIR
	then
		CHROOT=$SWITCHDIR

		# Changing motd welcome screen (without recovery mode)
		echo "Welcome to opendomo: Security and free domotics" >/etc/motd
	fi

	# Creating system link
	logger "  Device: $device linked as system drive"
	ln -s $DISKMOUNT $CHROOT/mnt/system
fi

if [ "$CONFDEVICE" = "1" ]; then
	logger "  Device: $device linked as configuration drive"
	ln -s $DISKMOUNT $CHROOT/mnt/odconf
fi

if [ "$LOGDIR" != "" ]; then
	if test -d $DISKMOUNT/$LOGDIR; then
		logger "$CONF_LOG is the logs dir"
	fi
fi

if [ "$HOMEDEVICE" = "1" ]; then
	logger "  Device: $device linked as home drive"

	# Creating and mount homefs
	if ! test -f $HOMEIMG; then
		dd if=/dev/zero of=$HOMEIMG bs=1024 count=$HOMESIZE
		mkfs.ext2 -F $HOMEIMG
	fi

	# Mount and create user folders
	mount $HOMEIMG $CHROOT/home
	test -d $CHROOT/home/admin || cp -r /etc/skel $CHROOT/home/admin
	chown -R admin:admin $CHROOT/home/admin
	chmod 700 $CHROOT/home/admin
fi

# Allways link drive to /media
ln -s $DISKMOUNT $CHROOT/media/$LABEL

# Changing / to mounted new root
if ! test -z $SWITCHDIR; then
	mkdir -p $MNTINITRD

	# Move mounted drives to new rootfs
	cd $MOUNTSDIR
	for drive in *; do
		mkdir -p $CHROOT/$MOUNTSDIR/$drive
		mount --move $drive $CHROOT/$MOUNTSDIR/$drive
		rmdir $drive
	done

	# Move kernel filesystems to new rootfs
	mount --move /dev  	$SWITCHDIR/dev
	mount --move /proc 	$SWITCHDIR/proc
	mount --move /sys  	$SWITCHDIR/sys
	mount --move /tmp  	$SWITCHDIR/tmp
	mount --move /run/lock  $SWICTHDIR/run/lock
	mount --move /run  	$SWICTHDIR/run

	# change root
	exec pivot_root $SWITCHDIR $MNTINITRD
fi
