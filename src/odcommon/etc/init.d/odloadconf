#! /bin/sh
### BEGIN INIT INFO
# Provides:          odconf
# Required-Start:    udev
# Required-Stop:
# Should-Start:      glibc
# Default-Start:     S
# Default-Stop:      0 6
# Short-Description: Load opendomo configuration files
# Description:       Load opendomo configuration files
#
### END INIT INFO
### Copyright(c) 2011 OpenDomo Services SL. Licensed under GPL v3 or later


. /lib/init/vars.sh
. /lib/lsb/init-functions

do_start () {
	LOGFILE="/var/opendomo/log/loadcfg.log"
	CGIFILE="/var/www/cgi-bin/od.cgi"
	UIDFILE="/etc/opendomo/uid"
	ODCFG="/mnt/odconf/opendomo.cfg"
	touch $LOGFILE
	chown admin:admin $LOGFILE

	# Copy and create default configuration
	log_action_begin_msg "Copy default configuration files"
	/usr/local/bin/manage_conf.sh copy &>$LOGFILE
	log_action_end_msg $?
	if ! test -f $UIDFILE; then
		mkdir -p /etc/opendomo/states/sleeping /etc/opendomo/states/secured
	fi

	# Create wrapper scripts
	log_action_begin_msg "Creating opendomo wrapper scripts"
	su -c /usr/local/bin/createwrappers.sh admin 2>$LOGFILE
	log_action_end_msg $?

	# Creating user folders if homedevice is not activated
	HOMEDEVICE=`grep ^HOMEDEVICE= $ODCFG | sed 's/\"//g' | cut -f2 -d=`
	if [ "$HOMEDEVICE" != "1" ]; then
		log_action_begin_msg "Creating user folders"
		USERFOLDERS=`grep /home /etc/passwd | cut -f6 -d:`
		for folder in $USERFOLDERS; do
			USER=`basename $folder`
			mkdir -p $folder
			chown -R $USER:users $folder
		done
		log_action_end_msg $?
	fi

	# rebuild mtab
	egrep "hda|mmcblk|sda|home|aufs" /proc/mounts >/etc/mtab

	# Change opendomo files and folders to admin user
	chown -R admin:admin "/etc/opendomo" 2>/dev/null
	chown -R admin:admin "/var/opendomo" 2>/dev/null
	chown -R admin:admin "/var/www" 2>/dev/null
	chown -R admin:admin "/usr/local/opendomo" 2>/dev/null
	chown admin:admin "/run/mounts" 2>/dev/null
	chown admin:admin "/media" 	2>/dev/null

	# Force odcgi server permissions
	if test -f $CGIFILE; then
		chown root $CGIFILE
		chmod +s   /var/www/cgi-bin/od.cgi
	fi
}

case "$1" in
  start|"")
	do_start
        ;;
  restart|reload|force-reload)
        echo "Error: argument '$1' not supported" >&2
        exit 3
        ;;
   status)
        echo "Error: argument '$1' not supported" >&2
        exit 3
        ;;
 stop)
        # No-op
        ;;
  *)
        echo "Usage: odloadconf [start]" >&2
        exit 3
        ;;
esac

:
