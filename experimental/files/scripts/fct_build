#!/bin/bash

FUNCDIR=files/scripts/
source $FUNCDIR/fct_vars

download_target() {
    if ! test -f $TEMPDIR/$ROOTFSPKG; then
        if wget -nc -q --directory-prefix=$TEMPDIR --no-check-certificate $ROOTFSURL; then
	    echo -e "(${DONE}done${NORL})"
        else
            echo -e "(${ERRO}failed${NORL})"
            exit 1
        fi
    else
        echo -e "(${OMIT}omited${NORL})"
    fi
}

extract_target() {
    # Clean old image and create folders
    rm -r $IMAGESDIR 2>/dev/null
    mkdir -p $IMAGESDIR

    # Extract rootfs image
    if ! test -d $ROOTFSDIR; then
        cd $TEMPDIR
        if tar xfJp $ROOTFSPKG 2>/dev/null; then
            echo -e "(${DONE}done${NORL})"
        else
            echo -e "(${ERRO}failed${NORL})"
            exit 1
        fi
        cd ..
    else
        echo -e "(${OMIT}omited${NORL})"
    fi

    # Copy qemu static emulator to target (only in arm)
    test [ "$ARCH" = "arm" ] && cp /usr/bin/qemu-arm-static $ROOTFSDIR/usr/bin 2>/dev/null
}

build_rootstrap() {
    # Copy initrd to create rootstrap
    if ! test -d $ROOTSTDIR; then
        cp -rp $ROOTFSDIR $ROOTSTDIR
        rm -fr $ROOTSTDIR/etc/resolv.conf
        cp /etc/resolv.conf $ROOTSTDIR/etc/

        # Update rootstrap apt sources
        if $CHROOT $ROOTSTDIR /bin/bash -c "apt-get update" &>> $LOGSDIR/rootstrap.$ARCH.log; then
            echo -ne "(${DONE}sources${NORL}) "
        else
            echo -ne "(${ERRO}sources${NORL}) "
        fi
        if $CHROOT $ROOTSTDIR /bin/bash -c "LC_ALL=C LANGUAGE=C LANG=C DEBIAN_FRONTEND=noninteractive \
            apt-get --force-yes -yq install $RPKGS" &>> $LOGSDIR/rootstrap.$ARCH.log; then
            echo -e "(${DONE}install${NORL}) "
        else
            echo -e "(${DONE}install${NORL}) "
        fi
    else
        echo -e "(${OMIT}omited${NORL})"
    fi
}

create_packages() {
    # Clean old packages
    rm -r $ROOTSTDIR/tmp/* 2>/dev/null
    for pkg in $ODPKG; do
        # Copy package into rootstrap and build
        cp -r $ODPKGDIR/$pkg $ROOTSTDIR/tmp/ 2>/dev/null
        if $CHROOT "$ROOTSTDIR" /bin/bash -c "cd /tmp/$pkg && dpkg-buildpackage 2>/dev/null >/dev/null" &>/dev/null; then
            echo -ne "(${DONE}$pkg${NORL}) "
        else
            echo -ne "(${ERRO}$pkg${NORL}) "
        fi
    done
    echo
}

install_packages() {
    # Select opendomo packages to install
    if ls $ROOTSTDIR/tmp/*.deb &>/dev/null; then
        cp $ROOTSTDIR/tmp/*.deb $ROOTFSDIR/tmp/ 2>/dev/null
    else
        # Download packages
        for pkg in $ODPKGURLS; do
            wget -nc -q --directory-prefix=$ROOTFSDIR/tmp --no-check-certificate "$pkg" &>/dev/null
        done
    fi

    # Install opendomo packages
    for deb in `ls -r1 $ROOTFSDIR/tmp/*.deb 2>/dev/null`; do
        PKG=`basename $deb`
        NAME=`echo $PKG | cut -f1 -d'_'`
        if $CHROOT "$ROOTFSDIR" /bin/bash -c "dpkg -i tmp/$PKG" &>/dev/null; then
            echo -ne "(${DONE}$NAME${NORL}) "
        else
            echo -ne "(${ERRO}$NAME${NORL}) "
        fi
    done
    echo
    $CHROOT "$ROOTFSDIR" /bin/bash -c "apt-get -f install" &>/dev/null
}
